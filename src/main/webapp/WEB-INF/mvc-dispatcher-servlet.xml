<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/security/oauth2 
        http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.1.xsd
        http://www.springframework.org/schema/data/mongo
      	http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd
      	http://www.springframework.org/schema/data/repository
        http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd">


	<mvc:default-servlet-handler />

	<!--  Enable startup bean, etc. -->
	<bean id="startupHousekeeper" class="com.st.component.StartupHousekeeper"/>
	<bean id="staticContextAccessor" class="com.st.component.StaticContextAccessor"/>

	<!-- Enable Image uploads (used in ImageController.class) -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
                        <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" >
                            <property name="supportedMediaTypes">
                                <list>
                                    <value>image/jpeg</value>
                                    <value>application/gzip</value>
                                </list>
                            </property>
                        </bean>
			<bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter" /> <!-- to upload decompressed Image files -->
                        <bean class="org.springframework.http.converter.StringHttpMessageConverter" />
                        <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
        
        <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
            <property name="favorPathExtension" value="false" />
            <property name="mediaTypes" >
                <value>
                    json=application/json
                    xml=application/xml
                </value>
            </property>
        </bean>

	<!-- Enable Annotations -->

	<context:annotation-config />
	<context:component-scan base-package="com.st.controller" />
	<context:component-scan base-package="com.st.model" />
	<context:component-scan base-package="com.st.service" />
	<context:component-scan base-package="com.st.serviceImpl" />

	<!-- Enable Property Placeholder -->

	<context:property-placeholder location="classpath:application.properties" />

	<!-- Amazon S3 Config -->

	<!-- We create a simple AmazonS3Client instance here. It is Autowired and 
		used in com.st.serviceImpl.ImageServiceImpl.class -->

	<bean id="s3Client" class="com.amazonaws.services.s3.AmazonS3Client">
	</bean>

       
        <!-- File upload max. filesize -->

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1000000000" /> <!-- max. filesize of 1 GB -->
                <property name="maxInMemorySize" value="10000000" /> <!-- max in memory 10MB (larger cached with files) --> 
	</bean>

	<!-- Mongo Config -->

	<!-- We use multiple databases, e.g. 'analysis', 'feature',... in MongoDB 
		We create a separate mongoTemplate instances for each database here. The 
		mongoTemplate instances are Autowired and used in the classes in package 
		com.spatialtranscriptomics.serviceImpl -->

	<mongo:auditing />
	
	<mongo:mongo host="${mongodb.host}" id="mongo"/>

	<bean id="mongoCredentials" class="org.springframework.data.authentication.UserCredentials">
		<constructor-arg name="username" value="${mongodb.user}" />
		<constructor-arg name="password" value="${mongodb.password}" />
	</bean>

	<bean id="mongoTemplateAnalysisDB" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongo" />
		<constructor-arg name="databaseName" value="${mongodb.database.analysis}" />
		<constructor-arg name="userCredentials" ref="mongoCredentials" />
	</bean>

	<bean id="mongoTemplateUserDB" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongo" />
		<constructor-arg name="databaseName" value="${mongodb.database.user}" />
		<constructor-arg name="userCredentials" ref="mongoCredentials" />
	</bean>

</beans>
